{"ast":null,"code":"var _jsxFileName = \"/Users/Emi_Yoda/Desktop/photoDB/client/src/components/Posts/Post/Post.js\";\nimport React, { useState } from \"react\";\nimport { Modal, Button, CardActions } from \"@material-ui/core/\";\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport ThumbUpAltOutlined from \"@material-ui/icons/ThumbUpAltOutlined\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport { useDispatch } from \"react-redux\";\nimport moment from \"moment\";\nimport { useHistory } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\nimport { getPost, likePost, deletePost } from \"../../../actions/posts\";\nimport { useSpring, animated } from \"react-spring/web.cjs\";\nimport PropTypes from \"prop-types\";\nimport Close from \"@material-ui/icons/Close\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport useStyles from \"./styles\";\nconst Fade = React.forwardRef(function Fade(props, ref) {\n  const {\n    in: open,\n    children,\n    onEnter,\n    onExited,\n    ...other\n  } = props;\n  const style = useSpring({\n    from: {\n      opacity: 0\n    },\n    to: {\n      opacity: open ? 1 : 0\n    },\n    onStart: () => {\n      if (open && onEnter) {\n        onEnter();\n      }\n    },\n    onRest: () => {\n      if (!open && onExited) {\n        onExited();\n      }\n    }\n  });\n  return /*#__PURE__*/React.createElement(animated.div, Object.assign({\n    ref: ref,\n    style: style\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }), children);\n});\nFade.propTypes = {\n  children: PropTypes.element,\n  in: PropTypes.bool.isRequired,\n  onEnter: PropTypes.func,\n  onExited: PropTypes.func\n};\n\nconst Post = ({\n  post,\n  setCurrentId\n}) => {\n  var _user$result3, _user$result4, _user$result5, _user$result6;\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\n  const history = useHistory();\n  const [isOpen, setOpen] = useState(false);\n\n  const Likes = () => {\n    var _post$likes;\n\n    if ((post === null || post === void 0 ? void 0 : (_post$likes = post.likes) === null || _post$likes === void 0 ? void 0 : _post$likes.length) > 0) {\n      return post.likes.find(like => {\n        var _user$result, _user$result2;\n\n        return like === ((user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.googleId) || (user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2._id));\n      }) ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ThumbUpAltIcon, {\n        fontSize: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }), \"\\xA0\", post.likes.length > 2 ? `You and ${post.likes.length - 1} others` : `${post.likes.length} like${post.likes.length > 1 ? \"s\" : \"\"}`) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ThumbUpAltOutlined, {\n        fontSize: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }), \"\\xA0\", post.likes.length, \" \", post.likes.length === 1 ? \"Like\" : \"Likes\");\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ThumbUpAltOutlined, {\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }), \"\\xA0Like\");\n  };\n\n  const openPost = e => {\n    // dispatch(getPost(post._id, history));\n    history.push(`/posts/${post._id}`);\n  };\n\n  const toggle = () => {\n    setOpen(prev => !prev);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"img-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: post.selectedFile || \"https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png\",\n    alt: \"uploaded pic\",\n    onMouseEnter: toggle,\n    onMouseLeave: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  })), isOpen ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, post.name), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, moment(post.createdAt).fromNow())), ((user === null || user === void 0 ? void 0 : (_user$result3 = user.result) === null || _user$result3 === void 0 ? void 0 : _user$result3.googleId) === (post === null || post === void 0 ? void 0 : post.creator) || (user === null || user === void 0 ? void 0 : (_user$result4 = user.result) === null || _user$result4 === void 0 ? void 0 : _user$result4._id) === (post === null || post === void 0 ? void 0 : post.creator)) && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.overlay2,\n    name: \"edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: e => {\n      e.stopPropagation();\n      setCurrentId(post._id);\n    },\n    style: {\n      color: \"white\"\n    },\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(MoreHorizIcon, {\n    fontSize: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post__tag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, post.tags.map(tag => `#${tag} `))), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"post-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, post.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, post.message.split(\" \").splice(0, 20).join(\" \"), \"...\"), /*#__PURE__*/React.createElement(CardActions, {\n    className: classes.cardActions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\",\n    disabled: !(user === null || user === void 0 ? void 0 : user.result),\n    onClick: () => dispatch(likePost(post._id)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Likes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  })), ((user === null || user === void 0 ? void 0 : (_user$result5 = user.result) === null || _user$result5 === void 0 ? void 0 : _user$result5.googleId) === (post === null || post === void 0 ? void 0 : post.creator) || (user === null || user === void 0 ? void 0 : (_user$result6 = user.result) === null || _user$result6 === void 0 ? void 0 : _user$result6._id) === (post === null || post === void 0 ? void 0 : post.creator)) && /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    color: \"secondary\",\n    onClick: () => dispatch(deletePost(post._id)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DeleteIcon, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }), \" \\xA0 Delete\"))) : null);\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/Emi_Yoda/Desktop/photoDB/client/src/components/Posts/Post/Post.js"],"names":["React","useState","Modal","Button","CardActions","ThumbUpAltIcon","DeleteIcon","MoreHorizIcon","ThumbUpAltOutlined","InfoIcon","useDispatch","moment","useHistory","motion","getPost","likePost","deletePost","useSpring","animated","PropTypes","Close","Backdrop","useStyles","Fade","forwardRef","props","ref","in","open","children","onEnter","onExited","other","style","from","opacity","to","onStart","onRest","propTypes","element","bool","isRequired","func","Post","post","setCurrentId","dispatch","classes","user","JSON","parse","localStorage","getItem","history","isOpen","setOpen","Likes","likes","length","find","like","result","googleId","_id","openPost","e","push","toggle","prev","selectedFile","name","createdAt","fromNow","creator","overlay2","stopPropagation","color","tags","map","tag","title","message","split","splice","join","cardActions"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Modal, Button, CardActions } from \"@material-ui/core/\";\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport ThumbUpAltOutlined from \"@material-ui/icons/ThumbUpAltOutlined\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport { useDispatch } from \"react-redux\";\nimport moment from \"moment\";\nimport { useHistory } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\n\nimport { getPost, likePost, deletePost } from \"../../../actions/posts\";\nimport { useSpring, animated } from \"react-spring/web.cjs\";\nimport PropTypes from \"prop-types\";\nimport Close from \"@material-ui/icons/Close\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport useStyles from \"./styles\";\n\nconst Fade = React.forwardRef(function Fade(props, ref) {\n  const { in: open, children, onEnter, onExited, ...other } = props;\n  const style = useSpring({\n    from: { opacity: 0 },\n    to: { opacity: open ? 1 : 0 },\n    onStart: () => {\n      if (open && onEnter) {\n        onEnter();\n      }\n    },\n    onRest: () => {\n      if (!open && onExited) {\n        onExited();\n      }\n    },\n  });\n\n  return (\n    <animated.div ref={ref} style={style} {...other}>\n      {children}\n    </animated.div>\n  );\n});\n\nFade.propTypes = {\n  children: PropTypes.element,\n  in: PropTypes.bool.isRequired,\n  onEnter: PropTypes.func,\n  onExited: PropTypes.func,\n};\n\nconst Post = ({ post, setCurrentId }) => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\n  const history = useHistory();\n  const [isOpen, setOpen] = useState(false);\n\n  const Likes = () => {\n    if (post?.likes?.length > 0) {\n      return post.likes.find(\n        (like) => like === (user?.result?.googleId || user?.result?._id)\n      ) ? (\n        <>\n          <ThumbUpAltIcon fontSize=\"small\" />\n          &nbsp;\n          {post.likes.length > 2\n            ? `You and ${post.likes.length - 1} others`\n            : `${post.likes.length} like${post.likes.length > 1 ? \"s\" : \"\"}`}\n        </>\n      ) : (\n        <>\n          <ThumbUpAltOutlined fontSize=\"small\" />\n          &nbsp;{post.likes.length} {post.likes.length === 1 ? \"Like\" : \"Likes\"}\n        </>\n      );\n    }\n\n    return (\n      <>\n        <ThumbUpAltOutlined fontSize=\"small\" />\n        &nbsp;Like\n      </>\n    );\n  };\n\n  const openPost = (e) => {\n    // dispatch(getPost(post._id, history));\n\n    history.push(`/posts/${post._id}`);\n  };\n\n  const toggle = () => {\n    setOpen((prev) => !prev);\n  };\n\n  return (\n    <div>\n      {/* <CardMedia\n          className={classes.media}\n          image={\n            post.selectedFile ||\n            \"https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png\"\n          }\n          title={post.title}\n        /> */}\n      <div className=\"img-wrap\">\n        <img\n          src={\n            post.selectedFile ||\n            \"https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png\"\n          }\n          alt=\"uploaded pic\"\n          onMouseEnter={toggle}\n          onMouseLeave={toggle}\n        />\n      </div>\n      {isOpen ? (\n        <div>\n          <div className=\"post__title\">\n            <h4>{post.name}</h4>\n            <h5>{moment(post.createdAt).fromNow()}</h5>\n          </div>\n          {(user?.result?.googleId === post?.creator ||\n            user?.result?._id === post?.creator) && (\n            <div className={classes.overlay2} name=\"edit\">\n              <Button\n                onClick={(e) => {\n                  e.stopPropagation();\n                  setCurrentId(post._id);\n                }}\n                style={{ color: \"white\" }}\n                size=\"small\"\n              >\n                <MoreHorizIcon fontSize=\"default\" />\n              </Button>\n            </div>\n          )}\n          <div className=\"post__tag\">\n            <h3>{post.tags.map((tag) => `#${tag} `)}</h3>\n          </div>\n          <h2 className=\"post-title\">{post.title}</h2>\n\n          <p>{post.message.split(\" \").splice(0, 20).join(\" \")}...</p>\n          <CardActions className={classes.cardActions}>\n            <Button\n              size=\"small\"\n              color=\"primary\"\n              disabled={!user?.result}\n              onClick={() => dispatch(likePost(post._id))}\n            >\n              <Likes />\n            </Button>\n            {(user?.result?.googleId === post?.creator ||\n              user?.result?._id === post?.creator) && (\n              <Button\n                size=\"small\"\n                color=\"secondary\"\n                onClick={() => dispatch(deletePost(post._id))}\n              >\n                <DeleteIcon fontSize=\"small\" /> &nbsp; Delete\n              </Button>\n            )}\n          </CardActions>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}