{"ast":null,"code":"var _jsxFileName = \"/Users/Emi_Yoda/Desktop/photoDB/client/src/components/Navbar/Navbar.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { AppBar, Typography, Toolbar, Avatar, Button, TextField } from \"@material-ui/core\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { motion } from \"framer-motion\";\nimport decode from \"jwt-decode\";\nimport memoriesLogo from \"../../images/memoriesLogo.png\"; // import memoriesText from '../../images/memoriesText.png';\n\nimport * as actionType from \"../../constants/actionTypes\";\nimport Search from \"@material-ui/icons/Search\";\nimport Modal from \"react-modal\";\nimport useStyles from \"./styles\";\nimport ChipInput from \"material-ui-chip-input\";\nimport { getPostsBySearch } from \"../../actions/posts\";\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nconst variants = {\n  open: {\n    opacity: 1,\n    x: 0\n  },\n  closed: {\n    opacity: 0,\n    x: \"-100%\"\n  }\n};\n\nconst Navbar = () => {\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"profile\")));\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const history = useHistory();\n  const classes = useStyles();\n  const [search, setSearch] = useState(\"\");\n  const [tags, setTags] = useState([]); // const [modalIsOpen, setIsOpen] = useState(false);\n\n  const [isOpen, setIsOpen] = useState(false);\n  const query = useQuery();\n\n  const logout = () => {\n    dispatch({\n      type: actionType.LOGOUT\n    });\n    history.push(\"/auth\");\n    setUser(null);\n  };\n\n  useEffect(() => {\n    const token = user === null || user === void 0 ? void 0 : user.token;\n\n    if (token) {\n      const decodedToken = decode(token);\n      if (decodedToken.exp * 1000 < new Date().getTime()) logout();\n    }\n\n    setUser(JSON.parse(localStorage.getItem(\"profile\")));\n  }, [location]);\n\n  const handleKeyPress = e => {\n    if (e.keyCode === 13) {\n      searchPost();\n    }\n  };\n\n  const handleAddChip = tag => setTags([...tags, tag]);\n\n  const handleDeleteChip = chipToDelete => setTags(tags.filter(tag => tag !== chipToDelete));\n\n  const searchPost = () => {\n    if (search.trim() || tags) {\n      dispatch(getPostsBySearch({\n        search,\n        tags: tags.join(\",\")\n      }));\n      history.push(`/posts/search?searchQuery=${search || \"none\"}&tags=${tags.join(\",\")}`);\n    } else {\n      history.push(\"/\");\n    }\n  };\n\n  const OpenModal = () => {\n    setIsOpen(true);\n  };\n\n  const CloseModal = () => {\n    setIsOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(motion.nav, {\n    animate: isOpen ? \"open\" : \"closed\",\n    variants: variants,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Toggle, {\n    onClick: () => setIsOpen(isOpen => !isOpen),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Items, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Navbar;","map":{"version":3,"sources":["/Users/Emi_Yoda/Desktop/photoDB/client/src/components/Navbar/Navbar.js"],"names":["React","useState","useEffect","AppBar","Typography","Toolbar","Avatar","Button","TextField","Link","useHistory","useLocation","useDispatch","motion","decode","memoriesLogo","actionType","Search","Modal","useStyles","ChipInput","getPostsBySearch","useQuery","URLSearchParams","search","variants","open","opacity","x","closed","Navbar","user","setUser","JSON","parse","localStorage","getItem","dispatch","location","history","classes","setSearch","tags","setTags","isOpen","setIsOpen","query","logout","type","LOGOUT","push","token","decodedToken","exp","Date","getTime","handleKeyPress","e","keyCode","searchPost","handleAddChip","tag","handleDeleteChip","chipToDelete","filter","trim","join","OpenModal","CloseModal"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  AppBar,\n  Typography,\n  Toolbar,\n  Avatar,\n  Button,\n  TextField,\n} from \"@material-ui/core\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { motion } from \"framer-motion\";\nimport decode from \"jwt-decode\";\n\nimport memoriesLogo from \"../../images/memoriesLogo.png\";\n// import memoriesText from '../../images/memoriesText.png';\nimport * as actionType from \"../../constants/actionTypes\";\nimport Search from \"@material-ui/icons/Search\";\nimport Modal from \"react-modal\";\nimport useStyles from \"./styles\";\nimport ChipInput from \"material-ui-chip-input\";\n\nimport { getPostsBySearch } from \"../../actions/posts\";\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nconst variants = {\n  open: { opacity: 1, x: 0 },\n  closed: { opacity: 0, x: \"-100%\" },\n};\n\nconst Navbar = () => {\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"profile\")));\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const history = useHistory();\n  const classes = useStyles();\n  const [search, setSearch] = useState(\"\");\n  const [tags, setTags] = useState([]);\n  // const [modalIsOpen, setIsOpen] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const query = useQuery();\n\n  const logout = () => {\n    dispatch({ type: actionType.LOGOUT });\n\n    history.push(\"/auth\");\n\n    setUser(null);\n  };\n\n  useEffect(() => {\n    const token = user?.token;\n\n    if (token) {\n      const decodedToken = decode(token);\n\n      if (decodedToken.exp * 1000 < new Date().getTime()) logout();\n    }\n\n    setUser(JSON.parse(localStorage.getItem(\"profile\")));\n  }, [location]);\n\n  const handleKeyPress = (e) => {\n    if (e.keyCode === 13) {\n      searchPost();\n    }\n  };\n\n  const handleAddChip = (tag) => setTags([...tags, tag]);\n\n  const handleDeleteChip = (chipToDelete) =>\n    setTags(tags.filter((tag) => tag !== chipToDelete));\n  const searchPost = () => {\n    if (search.trim() || tags) {\n      dispatch(getPostsBySearch({ search, tags: tags.join(\",\") }));\n      history.push(\n        `/posts/search?searchQuery=${search || \"none\"}&tags=${tags.join(\",\")}`\n      );\n    } else {\n      history.push(\"/\");\n    }\n  };\n  const OpenModal = () => {\n    setIsOpen(true);\n  };\n\n  const CloseModal = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <motion.nav animate={isOpen ? \"open\" : \"closed\"} variants={variants}>\n      <Toggle onClick={() => setIsOpen((isOpen) => !isOpen)} />\n      <Items />\n    </motion.nav>\n  );\n};\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}