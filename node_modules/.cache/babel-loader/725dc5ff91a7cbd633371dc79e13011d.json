{"ast":null,"code":"var _jsxFileName = \"/Users/Emi_Yoda/Desktop/photoDB/client/src/components/Form/Form.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FileBase from \"react-file-base64\";\nimport { useHistory } from \"react-router-dom\";\nimport { createPost, updatePost } from \"../../actions/posts\";\n\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  const [postData, setPostData] = useState({\n    title: \"\",\n    message: \"\",\n    tags: [],\n    selectedFile: \"\"\n  });\n  const post = useSelector(state => currentId ? state.posts.posts.find(message => message._id === currentId) : null);\n  const dispatch = useDispatch();\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\n  const history = useHistory();\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      title: \"\",\n      message: \"\",\n      tags: [],\n      selectedFile: \"\"\n    });\n  };\n\n  useEffect(() => {\n    if (!(post === null || post === void 0 ? void 0 : post.title)) clear();\n    if (post) setPostData(post); // eslint-disable-next-line\n  }, [post]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      var _user$result;\n\n      dispatch(createPost({ ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name\n      }, history));\n      clear();\n    } else {\n      var _user$result2;\n\n      dispatch(updatePost(currentId, { ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.name\n      }));\n      clear();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"postsForm\",\n    elevation: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"postsForm__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, currentId ? `Editing \"${post === null || post === void 0 ? void 0 : post.title}\"` : \"Creating a Post\"), /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: \"postsForm__form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"title\",\n    id: \"title\",\n    value: postData.title,\n    className: \"postsForm__form__input\",\n    onChange: e => setPostData({ ...postData,\n      title: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"Message\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"message\",\n    id: \"message\",\n    multiline: true,\n    rows: 4,\n    value: postData.message,\n    className: \"postsForm__form__input\",\n    onChange: e => setPostData({ ...postData,\n      message: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"tags\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"Tags\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"tags\",\n    id: \"tags\",\n    value: postData.tags,\n    className: \"postsForm__form__input\",\n    placeholder: \"Separate the tags with commas\",\n    onChange: e => setPostData({ ...postData,\n      tags: e.target.value.split(\",\")\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"postsForm__fileInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FileBase, {\n    type: \"file\",\n    multiple: false,\n    onDone: ({\n      base64\n    }) => setPostData({ ...postData,\n      selectedFile: base64\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"postsForm__btn\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, \"Submit\")));\n};\n\nexport default Form;","map":{"version":3,"sources":["/Users/Emi_Yoda/Desktop/photoDB/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","useDispatch","useSelector","FileBase","useHistory","createPost","updatePost","Form","currentId","setCurrentId","postData","setPostData","title","message","tags","selectedFile","post","state","posts","find","_id","dispatch","user","JSON","parse","localStorage","getItem","history","clear","handleSubmit","e","preventDefault","name","result","target","value","split","base64"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FileBase from \"react-file-base64\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { createPost, updatePost } from \"../../actions/posts\";\n\nconst Form = ({ currentId, setCurrentId }) => {\n  const [postData, setPostData] = useState({\n    title: \"\",\n    message: \"\",\n    tags: [],\n    selectedFile: \"\",\n  });\n  const post = useSelector((state) =>\n    currentId\n      ? state.posts.posts.find((message) => message._id === currentId)\n      : null\n  );\n  const dispatch = useDispatch();\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\n  const history = useHistory();\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({ title: \"\", message: \"\", tags: [], selectedFile: \"\" });\n  };\n  useEffect(() => {\n    if (!post?.title) clear();\n    if (post) setPostData(post);\n    // eslint-disable-next-line\n  }, [post]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      dispatch(createPost({ ...postData, name: user?.result?.name }, history));\n      clear();\n    } else {\n      dispatch(\n        updatePost(currentId, { ...postData, name: user?.result?.name })\n      );\n      clear();\n    }\n  };\n\n  return (\n    <div className=\"postsForm\" elevation={6}>\n      <h5 className=\"postsForm__title\">\n        {currentId ? `Editing \"${post?.title}\"` : \"Creating a Post\"}\n      </h5>\n      <form\n        autoComplete=\"off\"\n        noValidate\n        className=\"postsForm__form\"\n        onSubmit={handleSubmit}\n      >\n        <label htmlFor=\"title\">Title</label>\n        <input\n          name=\"title\"\n          id=\"title\"\n          value={postData.title}\n          className=\"postsForm__form__input\"\n          onChange={(e) => setPostData({ ...postData, title: e.target.value })}\n        />\n        <label htmlFor=\"message\">Message</label>\n        <input\n          name=\"message\"\n          id=\"message\"\n          multiline\n          rows={4}\n          value={postData.message}\n          className=\"postsForm__form__input\"\n          onChange={(e) =>\n            setPostData({ ...postData, message: e.target.value })\n          }\n        />\n        <label htmlFor=\"tags\">Tags</label>\n        <input\n          name=\"tags\"\n          id=\"tags\"\n          value={postData.tags}\n          className=\"postsForm__form__input\"\n          placeholder=\"Separate the tags with commas\"\n          onChange={(e) =>\n            setPostData({ ...postData, tags: e.target.value.split(\",\") })\n          }\n        />\n        <div className=\"postsForm__fileInput\">\n          <FileBase\n            type=\"file\"\n            multiple={false}\n            onDone={({ base64 }) =>\n              setPostData({ ...postData, selectedFile: base64 })\n            }\n          />\n        </div>\n        <button className=\"postsForm__btn\" type=\"submit\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}