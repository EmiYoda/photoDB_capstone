{"ast":null,"code":"var _jsxFileName = \"/Users/Emi_Yoda/Desktop/photoDB/client/src/components/Posts/Posts.js\";\nimport React from \"react\";\nimport { BeatLoader } from \"react-spinners\";\nimport { useSelector } from \"react-redux\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { getPosts } from \"../../actions/posts\";\nimport Post from \"./Post/Post\";\n\nconst Posts = ({\n  setCurrentId\n}) => {\n  const {\n    posts,\n    isLoading\n  } = useSelector(state => state.posts);\n  if (!posts.length && !isLoading) return \"No posts\";\n\n  const fethPosts = () => {\n    getPosts();\n  };\n\n  return isLoading ? /*#__PURE__*/React.createElement(BeatLoader, {\n    className: \"loader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, posts === null || posts === void 0 ? void 0 : posts.map(post => /*#__PURE__*/React.createElement(\"div\", {\n    key: post._id,\n    className: \"grid--item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n    dataLength: posts.length,\n    next: fetchPosts,\n    hasMore: true,\n    loader: /*#__PURE__*/React.createElement(BeatLoader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    }),\n    endMessage: /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, \"You have seen it all\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Post, {\n    post: post,\n    setCurrentId: setCurrentId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default Posts;","map":{"version":3,"sources":["/Users/Emi_Yoda/Desktop/photoDB/client/src/components/Posts/Posts.js"],"names":["React","BeatLoader","useSelector","InfiniteScroll","getPosts","Post","Posts","setCurrentId","posts","isLoading","state","length","fethPosts","map","post","_id","fetchPosts","textAlign"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,OAAOC,IAAP,MAAiB,aAAjB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AAClC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAuBP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACF,KAAlB,CAAxC;AAEA,MAAI,CAACA,KAAK,CAACG,MAAP,IAAiB,CAACF,SAAtB,EAAiC,OAAO,UAAP;;AACjC,QAAMG,SAAS,GAAG,MAAM;AACtBR,IAAAA,QAAQ;AACT,GAFD;;AAIA,SAAOK,SAAS,gBACd,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADc,gBAGd;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KADH,aACGA,KADH,uBACGA,KAAK,CAAEK,GAAP,CAAYC,IAAD,iBACV;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACC,GAAf;AAAoB,IAAA,SAAS,EAAC,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AACE,IAAA,UAAU,EAAEP,KAAK,CAACG,MADpB;AAEE,IAAA,IAAI,EAAEK,UAFR;AAGE,IAAA,OAAO,EAAE,IAHX;AAIE,IAAA,MAAM,eAAE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJV;AAKE,IAAA,UAAU,eACR;AAAG,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,CANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAWE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEH,IAAZ;AAAkB,IAAA,YAAY,EAAEP,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF,CADD,CADH,CAHF;AAuBD,CA/BD;;AAiCA,eAAeD,KAAf","sourcesContent":["import React from \"react\";\nimport { BeatLoader } from \"react-spinners\";\nimport { useSelector } from \"react-redux\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { getPosts } from \"../../actions/posts\";\n\nimport Post from \"./Post/Post\";\n\nconst Posts = ({ setCurrentId }) => {\n  const { posts, isLoading } = useSelector((state) => state.posts);\n\n  if (!posts.length && !isLoading) return \"No posts\";\n  const fethPosts = () => {\n    getPosts();\n  };\n\n  return isLoading ? (\n    <BeatLoader className=\"loader\" />\n  ) : (\n    <div className=\"wrapper\">\n      {posts?.map((post) => (\n        <div key={post._id} className=\"grid--item\">\n          <InfiniteScroll\n            dataLength={posts.length}\n            next={fetchPosts}\n            hasMore={true}\n            loader={<BeatLoader />}\n            endMessage={\n              <p style={{ textAlign: \"center\" }}>\n                <b>You have seen it all</b>\n              </p>\n            }\n          >\n            <Post post={post} setCurrentId={setCurrentId} />\n          </InfiniteScroll>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}