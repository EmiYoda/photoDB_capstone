{"ast":null,"code":"var _jsxFileName = \"/Users/Emi_Yoda/Desktop/photoDB/client/src/components/Navbar/NavbarItems.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport * as actionType from \"../../constants/actionTypes\";\nimport { useDispatch } from \"react-redux\";\nimport { bool } from \"prop-types\";\nimport { AppBar, Typography, Toolbar, Avatar, Button } from \"@material-ui/core\";\nimport decode from \"jwt-decode\";\n\nconst NavbarItems = ({\n  open\n}) => {\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"profile\")));\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const history = useHistory();\n\n  const logout = () => {\n    dispatch({\n      type: actionType.LOGOUT\n    });\n    history.push(\"/auth\");\n    setUser(null);\n  };\n\n  useEffect(() => {\n    const token = user === null || user === void 0 ? void 0 : user.token;\n\n    if (token) {\n      const decodedToken = decode(token);\n      if (decodedToken.exp * 1000 < new Date().getTime()) logout();\n    }\n\n    setUser(JSON.parse(localStorage.getItem(\"profile\")));\n  }, [location]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbarItems\",\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, (user === null || user === void 0 ? void 0 : user.result) ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Avatar // className={classes.purple}\n  , {\n    alt: user === null || user === void 0 ? void 0 : user.result.name,\n    src: user === null || user === void 0 ? void 0 : user.result.imageUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, user === null || user === void 0 ? void 0 : user.result.name.charAt(0)), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, user === null || user === void 0 ? void 0 : user.result.name), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\" // className={classes.logout}\n    ,\n    color: \"secondary\",\n    onClick: logout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"Logout\")) : /*#__PURE__*/React.createElement(Button, {\n    component: Link,\n    to: \"/auth\",\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Sign In\"));\n};\n\nNavbarItems.propTypes = {\n  open: bool.isRequired\n};\nexport default NavbarItems;","map":{"version":3,"sources":["/Users/Emi_Yoda/Desktop/photoDB/client/src/components/Navbar/NavbarItems.js"],"names":["React","useState","useEffect","Link","useHistory","useLocation","actionType","useDispatch","bool","AppBar","Typography","Toolbar","Avatar","Button","decode","NavbarItems","open","user","setUser","JSON","parse","localStorage","getItem","dispatch","location","history","logout","type","LOGOUT","push","token","decodedToken","exp","Date","getTime","result","name","imageUrl","charAt","propTypes","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport * as actionType from \"../../constants/actionTypes\";\nimport { useDispatch } from \"react-redux\";\nimport { bool } from \"prop-types\";\nimport { AppBar, Typography, Toolbar, Avatar, Button } from \"@material-ui/core\";\nimport decode from \"jwt-decode\";\n\nconst NavbarItems = ({ open }) => {\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"profile\")));\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const history = useHistory();\n\n  const logout = () => {\n    dispatch({ type: actionType.LOGOUT });\n\n    history.push(\"/auth\");\n\n    setUser(null);\n  };\n\n  useEffect(() => {\n    const token = user?.token;\n\n    if (token) {\n      const decodedToken = decode(token);\n\n      if (decodedToken.exp * 1000 < new Date().getTime()) logout();\n    }\n\n    setUser(JSON.parse(localStorage.getItem(\"profile\")));\n  }, [location]);\n\n  return (\n    <div className=\"navbarItems\" open={open}>\n      {/* <Link to=\"/\" className={classes.brandContainer}>\n        <img\n          component={Link}\n          to=\"/\"\n          src={memoriesText}\n          alt=\"icon\"\n          height=\"45px\"\n        />\n\n        <img\n          className={classes.image}\n          src={memoriesLogo}\n          alt=\"icon\"\n          height=\"40px\"\n        />\n      </Link> */}\n\n      {user?.result ? (\n        <div>\n          <Avatar\n            // className={classes.purple}\n            alt={user?.result.name}\n            src={user?.result.imageUrl}\n          >\n            {user?.result.name.charAt(0)}\n          </Avatar>\n          <Typography variant=\"h6\">{user?.result.name}</Typography>\n          <Button\n            variant=\"contained\"\n            // className={classes.logout}\n            color=\"secondary\"\n            onClick={logout}\n          >\n            Logout\n          </Button>\n        </div>\n      ) : (\n        <Button component={Link} to=\"/auth\" variant=\"contained\" color=\"primary\">\n          Sign In\n        </Button>\n      )}\n    </div>\n  );\n};\n\nNavbarItems.propTypes = {\n  open: bool.isRequired,\n};\n\nexport default NavbarItems;\n"]},"metadata":{},"sourceType":"module"}