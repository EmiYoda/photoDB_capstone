{"ast":null,"code":"var _jsxFileName = \"/Users/Emi_Yoda/Desktop/photoDB/client/src/components/Navbar/Navbar.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { AppBar, Typography, Toolbar, Avatar, Button, TextField } from \"@material-ui/core\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport decode from \"jwt-decode\";\nimport memoriesLogo from \"../../images/memoriesLogo.png\"; // import memoriesText from '../../images/memoriesText.png';\n\nimport * as actionType from \"../../constants/actionTypes\";\nimport Search from \"@material-ui/icons/Search\";\nimport Modal from \"react-modal\";\nimport useStyles from \"./styles\";\nimport ChipInput from \"material-ui-chip-input\";\nimport { getPostsBySearch } from \"../../actions/posts\";\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nconst Navbar = () => {\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"profile\")));\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const history = useHistory();\n  const classes = useStyles();\n  const [search, setSearch] = useState(\"\");\n  const [tags, setTags] = useState([]);\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const query = useQuery();\n\n  const logout = () => {\n    dispatch({\n      type: actionType.LOGOUT\n    });\n    history.push(\"/auth\");\n    setUser(null);\n  };\n\n  useEffect(() => {\n    const token = user === null || user === void 0 ? void 0 : user.token;\n\n    if (token) {\n      const decodedToken = decode(token);\n      if (decodedToken.exp * 1000 < new Date().getTime()) logout();\n    }\n\n    setUser(JSON.parse(localStorage.getItem(\"profile\")));\n  }, [location]);\n\n  const handleKeyPress = e => {\n    if (e.keyCode === 13) {\n      searchPost();\n    }\n  };\n\n  const handleAddChip = tag => setTags([...tags, tag]);\n\n  const handleDeleteChip = chipToDelete => setTags(tags.filter(tag => tag !== chipToDelete));\n\n  const searchPost = () => {\n    if (search.trim() || tags) {\n      dispatch(getPostsBySearch({\n        search,\n        tags: tags.join(\",\")\n      }));\n      history.push(`/posts/search?searchQuery=${search || \"none\"}&tags=${tags.join(\",\")}`);\n    } else {\n      history.push(\"/\");\n    }\n  };\n\n  const OpenModal = () => {\n    setIsOpen(true);\n  };\n\n  const CloseModal = () => {\n    setIsOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(AppBar, {\n    className: classes.appBar,\n    position: \"static\",\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    className: classes.brandContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.image,\n    src: memoriesLogo,\n    alt: \"icon\",\n    height: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Search, {\n    onClick: OpenModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modalIsOpen,\n    onRequestClose: CloseModal,\n    contentLabel: \"Post Creation Form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    className: classes.appBarSearch,\n    position: \"static\",\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    onKeyDown: handleKeyPress,\n    name: \"search\",\n    variant: \"outlined\",\n    label: \"Search Memories\",\n    fullWidth: true,\n    value: search,\n    onChange: e => setSearch(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ChipInput, {\n    style: {\n      margin: \"10px 0\"\n    },\n    value: tags,\n    onAdd: chip => handleAddChip(chip),\n    onDelete: chip => handleDeleteChip(chip),\n    label: \"Search Tags\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: searchPost,\n    className: classes.searchButton,\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, \"Search\"))), /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, (user === null || user === void 0 ? void 0 : user.result) ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.purple,\n    alt: user === null || user === void 0 ? void 0 : user.result.name,\n    src: user === null || user === void 0 ? void 0 : user.result.imageUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, user === null || user === void 0 ? void 0 : user.result.name.charAt(0)), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.userName,\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, user === null || user === void 0 ? void 0 : user.result.name), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    className: classes.logout,\n    color: \"secondary\",\n    onClick: logout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, \"Logout\")) : /*#__PURE__*/React.createElement(Button, {\n    component: Link,\n    to: \"/auth\",\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, \"Sign In\")));\n};\n\nexport default Navbar;","map":{"version":3,"sources":["/Users/Emi_Yoda/Desktop/photoDB/client/src/components/Navbar/Navbar.js"],"names":["React","useState","useEffect","AppBar","Typography","Toolbar","Avatar","Button","TextField","Link","useHistory","useLocation","useDispatch","decode","memoriesLogo","actionType","Search","Modal","useStyles","ChipInput","getPostsBySearch","useQuery","URLSearchParams","search","Navbar","user","setUser","JSON","parse","localStorage","getItem","dispatch","location","history","classes","setSearch","tags","setTags","modalIsOpen","setIsOpen","query","logout","type","LOGOUT","push","token","decodedToken","exp","Date","getTime","handleKeyPress","e","keyCode","searchPost","handleAddChip","tag","handleDeleteChip","chipToDelete","filter","trim","join","OpenModal","CloseModal","appBar","brandContainer","image","appBarSearch","target","value","margin","chip","searchButton","toolbar","result","profile","purple","name","imageUrl","charAt","userName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  AppBar,\n  Typography,\n  Toolbar,\n  Avatar,\n  Button,\n  TextField,\n} from \"@material-ui/core\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport decode from \"jwt-decode\";\n\nimport memoriesLogo from \"../../images/memoriesLogo.png\";\n// import memoriesText from '../../images/memoriesText.png';\nimport * as actionType from \"../../constants/actionTypes\";\nimport Search from \"@material-ui/icons/Search\";\nimport Modal from \"react-modal\";\nimport useStyles from \"./styles\";\nimport ChipInput from \"material-ui-chip-input\";\n\nimport { getPostsBySearch } from \"../../actions/posts\";\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nconst Navbar = () => {\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"profile\")));\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const history = useHistory();\n  const classes = useStyles();\n  const [search, setSearch] = useState(\"\");\n  const [tags, setTags] = useState([]);\n  const [modalIsOpen, setIsOpen] = useState(false);\n\n  const query = useQuery();\n\n  const logout = () => {\n    dispatch({ type: actionType.LOGOUT });\n\n    history.push(\"/auth\");\n\n    setUser(null);\n  };\n\n  useEffect(() => {\n    const token = user?.token;\n\n    if (token) {\n      const decodedToken = decode(token);\n\n      if (decodedToken.exp * 1000 < new Date().getTime()) logout();\n    }\n\n    setUser(JSON.parse(localStorage.getItem(\"profile\")));\n  }, [location]);\n\n  const handleKeyPress = (e) => {\n    if (e.keyCode === 13) {\n      searchPost();\n    }\n  };\n\n  const handleAddChip = (tag) => setTags([...tags, tag]);\n\n  const handleDeleteChip = (chipToDelete) =>\n    setTags(tags.filter((tag) => tag !== chipToDelete));\n  const searchPost = () => {\n    if (search.trim() || tags) {\n      dispatch(getPostsBySearch({ search, tags: tags.join(\",\") }));\n      history.push(\n        `/posts/search?searchQuery=${search || \"none\"}&tags=${tags.join(\",\")}`\n      );\n    } else {\n      history.push(\"/\");\n    }\n  };\n  const OpenModal = () => {\n    setIsOpen(true);\n  };\n\n  const CloseModal = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\n      <Link to=\"/\" className={classes.brandContainer}>\n        {/* <img\n          component={Link}\n          to=\"/\"\n          src={memoriesText}\n          alt=\"icon\"\n          height=\"45px\"\n        /> */}\n        <img\n          className={classes.image}\n          src={memoriesLogo}\n          alt=\"icon\"\n          height=\"40px\"\n        />\n      </Link>\n      <Search onClick={OpenModal} />\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={CloseModal}\n        contentLabel=\"Post Creation Form\"\n      >\n        <AppBar\n          className={classes.appBarSearch}\n          position=\"static\"\n          color=\"inherit\"\n        >\n          <TextField\n            onKeyDown={handleKeyPress}\n            name=\"search\"\n            variant=\"outlined\"\n            label=\"Search Memories\"\n            fullWidth\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n          />\n          <ChipInput\n            style={{ margin: \"10px 0\" }}\n            value={tags}\n            onAdd={(chip) => handleAddChip(chip)}\n            onDelete={(chip) => handleDeleteChip(chip)}\n            label=\"Search Tags\"\n            variant=\"outlined\"\n          />\n          <Button\n            onClick={searchPost}\n            className={classes.searchButton}\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Search\n          </Button>\n        </AppBar>\n      </Modal>\n      <Toolbar className={classes.toolbar}>\n        {user?.result ? (\n          <div className={classes.profile}>\n            <Avatar\n              className={classes.purple}\n              alt={user?.result.name}\n              src={user?.result.imageUrl}\n            >\n              {user?.result.name.charAt(0)}\n            </Avatar>\n            <Typography className={classes.userName} variant=\"h6\">\n              {user?.result.name}\n            </Typography>\n            <Button\n              variant=\"contained\"\n              className={classes.logout}\n              color=\"secondary\"\n              onClick={logout}\n            >\n              Logout\n            </Button>\n          </div>\n        ) : (\n          <Button\n            component={Link}\n            to=\"/auth\"\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Sign In\n          </Button>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}